<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
        <ApplicationIcon>Resources\dalamud_icon.ico</ApplicationIcon>

        <Version>1.2.1</Version>
        <FileVersion>$(Version)</FileVersion>
        <AssemblyVersion>$(Version)</AssemblyVersion>

        <RuntimeIdentifiers>win-x64;linux-x64;osx-x64</RuntimeIdentifiers>
        <PublishSingleFile>true</PublishSingleFile>
        <SelfContained>true</SelfContained>

        <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">
            true</IsWindows>
        <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">
            true</IsOSX>
        <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">
            true</IsLinux>
        <Configurations>Debug;Release</Configurations>
    </PropertyGroup>

    <PropertyGroup>
        <DefineConstants Condition=" '$(ExtraDefineConstants)' != '' ">
            $(DefineConstants);$(ExtraDefineConstants)</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsWindows)'=='true'">
        <DefineConstants>$(DefineConstants);WIN32</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(IsOSX)'=='true'">
        <DefineConstants>$(DefineConstants);OSX</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(IsLinux)'=='true'">
        <DefineConstants>$(DefineConstants);LINUX</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Label="Configuration" Condition="'$(Configuration)'=='Release'">
        <AppOutputBase>$(MSBuildProjectDirectory)\</AppOutputBase>
        <PathMap>$(AppOutputBase)=C:\goatsoft\xl\XIVLauncher.Core\</PathMap>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="../XIVLauncher.VersionGenerator/XIVLauncher.VersionGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
        <ProjectReference Include="..\XIVLauncher.Common.Unix\XIVLauncher.Common.Unix.csproj" />
        <ProjectReference Include="..\..\lib\FFXIVQuickLauncher\src\XIVLauncher.Common.Windows\XIVLauncher.Common.Windows.csproj" />
        <ProjectReference Include="..\..\lib\FFXIVQuickLauncher\src\XIVLauncher.Common\XIVLauncher.Common.csproj" />
    </ItemGroup>

    <ItemGroup>
        <CompilerVisibleProperty Include="AssemblyVersion" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Config.Net" Version="4.19.0" />
        <PackageReference Include="KeySharp" Version="1.0.5" />
        <PackageReference Include="Serilog" Version="4.3.0" />
        <PackageReference Include="Serilog.Enrichers.Thread" Version="4.0.0" />
        <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
        <PackageReference Include="Serilog.Sinks.File" Version="7.0.0" />
        <PackageReference Include="Hexa.NET.ImGui" Version="2.2.9" />
        <PackageReference Include="Hexa.NET.ImGui.Backends.SDL3" Version="1.0.18" />
        <PackageReference Include="Hexa.NET.SDL3" Version="1.2.16" />
        <PackageReference Include="Hexa.NET.SDL3.Image" Version="1.0.0" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="Resources\Localization\Strings.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Strings.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Include="Resources/fonts/FontAwesome5FreeSolid.otf" LogicalName="FontAwesome5FreeSolid.otf" />
        <EmbeddedResource Include="Resources/fonts/NotoSansCJKjp-Regular.otf" LogicalName="NotoSansCJKjp-Regular.otf" />

        <EmbeddedResource Include="Resources/logo.png" LogicalName="logo.png" />

        <EmbeddedResource Include="Resources/bg_logo.png" LogicalName="bg_logo.png" />

        <EmbeddedResource Include="Resources/steamdeck_fts.png" LogicalName="steamdeck_fts.png" />
        <EmbeddedResource Include="Resources/steamdeck_fterror.png" LogicalName="steamdeck_fterror.png" />
        <EmbeddedResource Include="Resources/steamdeck_switchprompt.png" LogicalName="steamdeck_switchprompt.png" />
    </ItemGroup>

    <ItemGroup Condition="'$(RuntimeIdentifier)' == 'win10-x64'">
        <Resource Remove="Resources/binaries/aria2c-xl.exe" />
        <Content Include="Resources/binaries/aria2c-xl.exe">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Compile Update="Resources\Localization\Strings.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>Strings.resx</DependentUpon>
        </Compile>
    </ItemGroup>

    <!-- Git -->
    <Target Name="GetGitHash" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">
        <PropertyGroup>
            <!-- temp file for the git version (lives in "obj" folder)-->
            <VerFile>$(IntermediateOutputPath)gitver</VerFile>
        </PropertyGroup>
        <!-- write the hash to the temp file.-->
        <Exec Command="git -C &quot;$(ProjectDir.Replace('\','\\'))&quot; describe --long --always --dirty &gt; $(VerFile)" />
        <!-- read the version into the GitVersion itemGroup-->
        <ReadLinesFromFile File="$(VerFile)">
            <Output TaskParameter="Lines" ItemName="GitVersion" />
        </ReadLinesFromFile>
        <!-- Set the BuildHash property to contain the GitVersion, if it wasn't already set.-->
        <PropertyGroup>
            <BuildHash>@(GitVersion)</BuildHash>
        </PropertyGroup>
    </Target>
    <Target Name="WriteGitHash" BeforeTargets="CoreCompile">
        <!-- names the obj/.../CustomAssemblyInfo.cs file -->
        <PropertyGroup>
            <CustomAssemblyInfoFile>$(IntermediateOutputPath)CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
        </PropertyGroup>
        <!-- includes the CustomAssemblyInfo for compilation into your project -->
        <ItemGroup>
            <Compile Include="$(CustomAssemblyInfoFile)" />
        </ItemGroup>
        <!-- defines the AssemblyMetadata attribute that will be written -->
        <ItemGroup>
            <AssemblyAttributes Include="AssemblyMetadata">
                <_Parameter1>GitHash</_Parameter1>
                <_Parameter2>$(BuildHash)</_Parameter2>
            </AssemblyAttributes>

            <AssemblyAttributes Include="AssemblyMetadata">
                <_Parameter1>BuildOrigin</_Parameter1>
                <_Parameter2>$(GITHUB_REPOSITORY)</_Parameter2>
            </AssemblyAttributes>
        </ItemGroup>
        <!-- writes the attribute to the customAssemblyInfo file -->
        <WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)" />
    </Target>

</Project>
